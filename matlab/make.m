% build oselm
% EIGEN_DIR = C:\eigen-eigen-07105f7124f9\
% if 1
%     eigen_dir = 'C:\eigen-eigen-07105f7124f9\';
%     mkl_dir = 'C:\Program Files (x86)\IntelSWTools\compilers_and_libraries_2016.3.207\windows\mkl\';
%     boost_dir = 'C:\boost_1_61_0\';
%     mkl_include = fullfile(mkl_dir, 'include');
%     mkl_lib = fullfile(mkl_dir, 'lib', 'intel64_win');
%     openmp_lib = 'C:\Program Files (x86)\IntelSWTools\compilers_and_libraries_2016.3.207\windows\compiler\lib\intel64_win';
%     boost_lib_vc14 = fullfile(boost_dir, 'lib64-msvc-14.0');
%     boost_lib_vc12 = fullfile(boost_dir, 'lib64-msvc-12.0');
%     eigen_switch = ['-I', eigen_dir];
%     mkl_switch = ['-I', mkl_include];
%     boost_switch = ['-I', boost_dir];
%     mkl_lib_switch = ['-L', mkl_lib];
%     openmp_switch = ['-L', openmp_lib];
%     boost_lib_vc14_switch = ['-L', boost_lib_vc14];
%     boost_lib_vc12_switch = ['-L', boost_lib_vc12];
%     mex('-v', '-I..', eigen_switch, mkl_switch, boost_switch, mkl_lib_switch, ...
%         '-lmkl_intel_lp64.lib', '-lmkl_core.lib', '-lmkl_intel_thread.lib', ...
%         openmp_switch, '-llibiomp5md.lib', ...
%         boost_lib_vc14_switch, 'boost_filesystem-vc140-mt-1_61.lib', 'boost_filesystem-vc140-mt-gd-1_61.lib', ...
%         boost_lib_vc12_switch, 'boost_filesystem-vc120-mt-1_61.lib', 'boost_filesystem-vc120-mt-gd-1_61.lib', ...
%         '-largeArrayDims', '-DEIGEN_USE_MKL_ALL', 'oselm_mex.cpp');
% else
%     mex -I.. -IC:\eigen-eigen-07105f7124f9\ COMPFLAGS="/openmp $COMPFLAGS" -largeArrayDims oselm_mex.cpp
% end

% mex('-v', '-I..', '-I/home/leoyolo/src/eigen-328', 'CXXFLAGS="-fopenmp $CXXFLAGS"', '-largeArrayDims', '-lgomp', 'oselm_mex.cpp');
% mex('-v', 'GCC="/usr/bin/gcc-4.7"', '-I..', '-I/home/leoyolo/src/eigen-328', 'CXXFLAGS="-fopenmp $CXXFLAGS"', 'LDFLAGS="$LDFLAGS -fopenmp"', '-largeArrayDims', 'oselm_mex.cpp');
% mex('-v', '-I..', '-I/home/leoyolo/src/eigen-328', '-largeArrayDims', 'oselm_mex.cpp');


% if 1
%     eigen_dir = '/home/leoyolo/src/eigen-328';
%     mkl_dir = getenv('MKLROOT');
%     mkl_include = fullfile(mkl_dir, 'include');
%     mkl_lib = fullfile(mkl_dir, 'lib', 'intel64');
%     eigen_switch = ['-I', eigen_dir];
%     mkl_switch = ['-I', mkl_include];
%     mkl_lib_switch = ['-L', sprintf('"%s"', mkl_lib)];
%     mex('-v', 'GCC="/usr/bin/gcc-4.7"', ...
%         '-I..', eigen_switch, mkl_switch, ...
%         mkl_lib_switch, '-llibmkl_intel_lp64.a', '-llibmkl_core.a', ...
%         '-llibmkl_intel_thread.a', ...
%         '-liomp5', '-lpthread', '-lm', '-ldl', ...
%         '-largeArrayDims', '-DEIGEN_USE_MKL_ALL', 'oselm_mex.cpp');
% end
    
% mex -v -I.. -I/home/leoyolo/src/eigen-328 -I${MKLROOT}/include -largeArrayDims -DEIGEN_USE_MKL_ALL ...
%     -L${MKLROOT}/lib/intel64 -liomp5 -lpthread -lm -ldl ...
%     -llibmkl_intel_lp64.a -llibmkl_core.a -llibmkl_intel_thread.a oselm_mex.cpp

% mex -v LDFLAGS='-Wl,--verbose $LDFLAGS' ...
%     -L/opt/intel/lib/intel64 -liomp5 -lpthread -lm -ldl ...
%     ${MKLROOT}/lib/intel64/libmkl_intel_lp64.a ...
%     ${MKLROOT}/lib/intel64/libmkl_core.a ...
%     ${MKLROOT}/lib/intel64/libmkl_intel_thread.a ...
%     -I.. -I$MKLROOT/include -I$EIGEN_DIR -largeArrayDims ...
%     -DEIGEN_USE_MKL_ALL oselm_mex.cpp
clc;
mex -v CXXFLAGS="-m64 -Wall $CXXFLAGS" ...
    LDFLAGS='-Wl,--verbose -Wl,--no-as-needed $LDFLAGS'...
    -I.. -I${MKLROOT}/include -I${EIGEN_DIR} ...
    -L{MKLROOT}/lib/intel64 -lmkl_intel_thread -lmkl_intel_lp64 -lmkl_core -lmkl_avx2 -lmkl_def...
    -L/opt/intel/lib/intel64 -liomp5 ...
    -lpthread -lm -ldl ...
    -largeArrayDims -DEIGEN_USE_MKL_ALL oselm_mex.cpp

% mex -v CXXFLAGS="-Wall -fopenmp $CXXFLAGS" ...
%     LDFLAGS='-Wl,--verbose -fopenmp $LDFLAGS' ...
%     -I.. -I${EIGEN_DIR} -largeArrayDims oselm_mex.cpp
    


